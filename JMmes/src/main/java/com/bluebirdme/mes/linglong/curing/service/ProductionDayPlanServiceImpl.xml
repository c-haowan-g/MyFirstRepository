<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <sql comment="datagrid" id="datagrid_rows">
        <![CDATA[
            SELECT
				pa1.MaterialDesc_S spec_left_s,
				pa2.MaterialDesc_S spec_right_s,p.*
			FROM
				AT_C_PP_PRODUCTIONDAYPLAN p,
			AT_INT_SAP_MATERIALS pa1,
			AT_INT_SAP_MATERIALS pa2
			WHERE
				1 = 1
			and p.SPECIFICATION_LEFT_S=pa1.MaterialCode_S
			and p.SPECIFICATION_right_S=pa2.MaterialCode_S
			AND RECORD_FLAG_S = 'A'
                <#if approval_time_s??>
                     and APPROVAL_TIME_S=:approval_time_s
                </#if>
                <#if approver_s??>
                     and APPROVER_S=:approver_s
                </#if>
                <#if changed_by_s??>
                     and CHANGED_BY_S=:changed_by_s
                </#if>
                <#if changed_time_t??>
                     and CHANGED_TIME_T=:changed_time_t
                </#if>
                <#if childbom_ver_left_s??>
                     and CHILDBOM_VER_LEFT_S=:childbom_ver_left_s
                </#if>
                <#if childbom_ver_right_s??>
                     and CHILDBOM_VER_RIGHT_S=:childbom_ver_right_s
                </#if>
                <#if created_by_s??>
                     and CREATED_BY_S=:created_by_s
                </#if>
                <#if created_time_t??>
                     and CREATED_TIME_T=:created_time_t
                </#if>
                <#if equip_code_left_s??>
                     and EQUIP_CODE_LEFT_S=:equip_code_left_s
                </#if>
                <#if equip_code_right_s??>
                     and EQUIP_CODE_RIGHT_S=:equip_code_right_s
                </#if>
                <#if material_code_left_s??>
                     and MATERIAL_CODE_LEFT_S like :material_code_left_s
                </#if>
                <#if material_code_right_s??>
                     and MATERIAL_CODE_RIGHT_S=:material_code_right_s
                </#if>
                <#if material_desc_left_s??>
                     and MATERIAL_DESC_LEFT_S like :material_desc_left_s
                </#if>
                <#if material_desc_right_s??>
                     and MATERIAL_DESC_RIGHT_S=:material_desc_right_s
                </#if>
                <#if material_name_left_s??>
                     and MATERIAL_NAME_LEFT_S=:material_name_left_s
                </#if>
                <#if memo_left_s??>
                     and MEMO_LEFT_S=:memo_left_s
                </#if>
                <#if memo_right_s??>
                     and MEMO_RIGHT_S=:memo_right_s
                </#if>
                <#if output_midclass_left_i??>
                     and OUTPUT_MIDCLASS_LEFT_I=:output_midclass_left_i
                </#if>
                <#if output_midclass_right_i??>
                     and OUTPUT_MIDCLASS_RIGHT_I=:output_midclass_right_i
                </#if>
                <#if output_morclass_left_i??>
                     and OUTPUT_MORCLASS_LEFT_I=:output_morclass_left_i
                </#if>
                <#if output_morclass_right_i??>
                     and OUTPUT_MORCLASS_RIGHT_I=:output_morclass_right_i
                </#if>
                <#if output_nigclass_left_i??>
                     and OUTPUT_NIGCLASS_LEFT_I=:output_nigclass_left_i
                </#if>
                <#if output_nigclass_right_i??>
                     and OUTPUT_NIGCLASS_RIGHT_I=:output_nigclass_right_i
                </#if>
                <#if planamount_mid_left_i??>
                     and PLANAMOUNT_MID_LEFT_I=:planamount_mid_left_i
                </#if>
                <#if planamount_mid_right_i??>
                     and PLANAMOUNT_MID_RIGHT_I=:planamount_mid_right_i
                </#if>
                <#if planamount_mor_left_i??>
                     and PLANAMOUNT_MOR_LEFT_I=:planamount_mor_left_i
                </#if>
                <#if planamount_mor_right_i??>
                     and PLANAMOUNT_MOR_RIGHT_I=:planamount_mor_right_i
                </#if>
                <#if planamount_nig_left_i??>
                     and PLANAMOUNT_NIG_LEFT_I=:planamount_nig_left_i
                </#if>
                <#if planamount_nig_right_i??>
                     and PLANAMOUNT_NIG_RIGHT_I=:planamount_nig_right_i
                </#if>
                <#if planno_month_s??>
                     and PLANNO_MONTH_S=:planno_month_s
                </#if>
                <#if planqty_mid_left_i??>
                     and PLANQTY_MID_LEFT_I=:planqty_mid_left_i
                </#if>
                <#if planqty_mid_right_i??>
                     and PLANQTY_MID_RIGHT_I=:planqty_mid_right_i
                </#if>
                <#if planqty_mor_left_i??>
                     and PLANQTY_MOR_LEFT_I=:planqty_mor_left_i
                </#if>
                <#if planqty_mor_right_i??>
                     and PLANQTY_MOR_RIGHT_I=:planqty_mor_right_i
                </#if>
                <#if planqty_nigclass_left_i??>
                     and PLANQTY_NIGCLASS_LEFT_I=:planqty_nigclass_left_i
                </#if>
                <#if planqty_nigclass_right_i??>
                     and PLANQTY_NIGCLASS_RIGHT_I=:planqty_nigclass_right_i
                </#if>
                <#if plan_no_s??>
                     and PLAN_NO_S=:plan_no_s
                </#if>
                <#if left_order_number_s??>
                     and LEFT_ORDER_NUMBER_S=:left_order_number_s
                </#if>
                <#if right_order_number_s??>
                     and RIGHT_ORDER_NUMBER_S=:right_order_number_s
                </#if>
                <#if plan_queue_s??>
                     and PLAN_QUEUE_S=:plan_queue_s
                </#if>
                <#if processbom_index_build_s??>
                     and PROCESSBOM_INDEX_BUILD_S=:processbom_index_build_s
                </#if>
                <#if processbom_index_curing_s??>
                     and PROCESSBOM_INDEX_CURING_S=:processbom_index_curing_s
                </#if>
                <#if productionver_left_s??>
                     and PRODUCTIONVER_LEFT_S=:productionver_left_s
                </#if>
                <#if productionver_right_s??>
                     and PRODUCTIONVER_RIGHT_S=:productionver_right_s
                </#if>
                <#if production_bom_left_s??>
                     and PRODUCTION_BOM_LEFT_S=:production_bom_left_s
                </#if>
                <#if production_bom_right_s??>
                     and PRODUCTION_BOM_RIGHT_S=:production_bom_right_s
                </#if>
                <#if production_date_s??>
                     and PRODUCTION_DATE_S=:production_date_s
                </#if>
                <#if production_line_s??>
                     and PRODUCTION_LINE_S=:production_line_s
                </#if>
                <#if production_step_left_s??>
                     and PRODUCTION_STEP_LEFT_S=:production_step_left_s
                </#if>
                <#if production_step_right_s??>
                     and PRODUCTION_STEP_RIGHT_S=:production_step_right_s
                </#if>
                <#if qty_dayproduct_left_i??>
                     and QTY_DAYPRODUCT_LEFT_I=:qty_dayproduct_left_i
                </#if>
                <#if qty_dayproduct_right_i??>
                     and QTY_DAYPRODUCT_RIGHT_I=:qty_dayproduct_right_i
                </#if>
                <#if quantity_dayplan_left_i??>
                     and QUANTITY_DAYPLAN_LEFT_I=:quantity_dayplan_left_i
                </#if>
                <#if quantity_dayplan_right_i??>
                     and QUANTITY_DAYPLAN_RIGHT_I=:quantity_dayplan_right_i
                </#if>
                <#if reason_midclass_left_s??>
                     and REASON_MIDCLASS_LEFT_S=:reason_midclass_left_s
                </#if>
                <#if reason_midclass_right_s??>
                     and REASON_MIDCLASS_RIGHT_S=:reason_midclass_right_s
                </#if>
                <#if reason_morclass_left_s??>
                     and REASON_MORCLASS_LEFT_S=:reason_morclass_left_s
                </#if>
                <#if reason_morclass_right_s??>
                     and REASON_MORCLASS_RIGHT_S=:reason_morclass_right_s
                </#if>
                <#if reason_nigclass_left_s??>
                     and REASON_NIGCLASS_LEFT_S=:reason_nigclass_left_s
                </#if>
                <#if reason_nigclass_right_s??>
                     and REASON_NIGCLASS_RIGHT_S=:reason_nigclass_right_s
                </#if>
                    
                <#if spare10_s??>
                     and SPARE10_S=:spare10_s
                </#if>
                <#if spare1_s??>
                     and SPARE1_S=:spare1_s
                </#if>
                <#if spare2_s??>
                     and SPARE2_S=:spare2_s
                </#if>
                <#if spare3_s??>
                     and SPARE3_S=:spare3_s
                </#if>
                <#if spare4_s??>
                     and SPARE4_S=:spare4_s
                </#if>
                <#if spare5_s??>
                     and SPARE5_S=:spare5_s
                </#if>
                <#if spare6_s??>
                     and SPARE6_S=:spare6_s
                </#if>
                <#if spare7_s??>
                     and SPARE7_S=:spare7_s
                </#if>
                <#if spare8_s??>
                     and SPARE8_S=:spare8_s
                </#if>
                <#if spare9_s??>
                     and SPARE9_S=:spare9_s
                </#if>
                <#if specification_left_s??>
                     and SPECIFICATION_LEFT_S=:specification_left_s
                </#if>
                <#if specification_right_s??>
                     and SPECIFICATION_RIGHT_S=:specification_right_s
                </#if>
                <#if status_s??>
                     and STATUS_S=:status_s
                </#if>
                <#if s_factory_s??>
                     and S_FACTORY_S=:s_factory_s
                </#if>
             order by production_line_s asc,to_number(plan_queue_s) asc
        ]]>
    </sql>
    <sql comment="datagrid" id="datagrid_total">
        <![CDATA[
           SELECT
				COUNT(1)
			FROM
				AT_C_PP_PRODUCTIONDAYPLAN p,
			AT_INT_SAP_MATERIALS pa1,
			AT_INT_SAP_MATERIALS pa2
			WHERE
				1 = 1
			and p.SPECIFICATION_LEFT_S=pa1.MaterialCode_S
			and p.SPECIFICATION_right_S=pa2.MaterialCode_S
			AND RECORD_FLAG_S = 'A'
                    <#if agenc_no_s??>
                     and AGENC_NO_S=:agenc_no_s
                </#if>
                <#if approval_time_s??>
                     and APPROVAL_TIME_S=:approval_time_s
                </#if>
                <#if approver_s??>
                     and APPROVER_S=:approver_s
                </#if>
                <#if changed_by_s??>
                     and CHANGED_BY_S=:changed_by_s
                </#if>
                <#if changed_time_t??>
                     and CHANGED_TIME_T=:changed_time_t
                </#if>
                <#if childbom_ver_left_s??>
                     and CHILDBOM_VER_LEFT_S=:childbom_ver_left_s
                </#if>
                <#if childbom_ver_right_s??>
                     and CHILDBOM_VER_RIGHT_S=:childbom_ver_right_s
                </#if>
                <#if created_by_s??>
                     and CREATED_BY_S=:created_by_s
                </#if>
                <#if created_time_t??>
                     and CREATED_TIME_T=:created_time_t
                </#if>
                <#if equip_code_left_s??>
                     and EQUIP_CODE_LEFT_S=:equip_code_left_s
                </#if>
                <#if equip_code_right_s??>
                     and EQUIP_CODE_RIGHT_S=:equip_code_right_s
                </#if>
                <#if material_code_left_s??>
                     and MATERIAL_CODE_LEFT_S like :material_code_left_s
                </#if>
                <#if material_code_right_s??>
                     and MATERIAL_CODE_RIGHT_S=:material_code_right_s
                </#if>
                <#if material_desc_left_s??>
                     and MATERIAL_DESC_LEFT_S like :material_desc_left_s
                </#if>
                <#if material_desc_right_s??>
                     and MATERIAL_DESC_RIGHT_S=:material_desc_right_s
                </#if>
                <#if material_name_left_s??>
                     and MATERIAL_NAME_LEFT_S=:material_name_left_s
                </#if>
                <#if memo_left_s??>
                     and MEMO_LEFT_S=:memo_left_s
                </#if>
                <#if memo_right_s??>
                     and MEMO_RIGHT_S=:memo_right_s
                </#if>
                <#if output_midclass_left_i??>
                     and OUTPUT_MIDCLASS_LEFT_I=:output_midclass_left_i
                </#if>
                <#if output_midclass_right_i??>
                     and OUTPUT_MIDCLASS_RIGHT_I=:output_midclass_right_i
                </#if>
                <#if output_morclass_left_i??>
                     and OUTPUT_MORCLASS_LEFT_I=:output_morclass_left_i
                </#if>
                <#if output_morclass_right_i??>
                     and OUTPUT_MORCLASS_RIGHT_I=:output_morclass_right_i
                </#if>
                <#if output_nigclass_left_i??>
                     and OUTPUT_NIGCLASS_LEFT_I=:output_nigclass_left_i
                </#if>
                <#if output_nigclass_right_i??>
                     and OUTPUT_NIGCLASS_RIGHT_I=:output_nigclass_right_i
                </#if>
                <#if planamount_mid_left_i??>
                     and PLANAMOUNT_MID_LEFT_I=:planamount_mid_left_i
                </#if>
                <#if planamount_mid_right_i??>
                     and PLANAMOUNT_MID_RIGHT_I=:planamount_mid_right_i
                </#if>
                <#if planamount_mor_left_i??>
                     and PLANAMOUNT_MOR_LEFT_I=:planamount_mor_left_i
                </#if>
                <#if planamount_mor_right_i??>
                     and PLANAMOUNT_MOR_RIGHT_I=:planamount_mor_right_i
                </#if>
                <#if planamount_nig_left_i??>
                     and PLANAMOUNT_NIG_LEFT_I=:planamount_nig_left_i
                </#if>
                <#if planamount_nig_right_i??>
                     and PLANAMOUNT_NIG_RIGHT_I=:planamount_nig_right_i
                </#if>
                <#if planno_month_s??>
                     and PLANNO_MONTH_S=:planno_month_s
                </#if>
                <#if planqty_mid_left_i??>
                     and PLANQTY_MID_LEFT_I=:planqty_mid_left_i
                </#if>
                <#if planqty_mid_right_i??>
                     and PLANQTY_MID_RIGHT_I=:planqty_mid_right_i
                </#if>
                <#if planqty_mor_left_i??>
                     and PLANQTY_MOR_LEFT_I=:planqty_mor_left_i
                </#if>
                <#if planqty_mor_right_i??>
                     and PLANQTY_MOR_RIGHT_I=:planqty_mor_right_i
                </#if>
                <#if planqty_nigclass_left_i??>
                     and PLANQTY_NIGCLASS_LEFT_I=:planqty_nigclass_left_i
                </#if>
                <#if planqty_nigclass_right_i??>
                     and PLANQTY_NIGCLASS_RIGHT_I=:planqty_nigclass_right_i
                </#if>
                <#if plan_no_s??>
                     and PLAN_NO_S=:plan_no_s
                </#if>
                <#if left_order_number_s??>
                     and LEFT_ORDER_NUMBER_S=:left_order_number_s
                </#if>
                <#if right_order_number_s??>
                     and RIGHT_ORDER_NUMBER_S=:right_order_number_s
                </#if>
                <#if plan_queue_s??>
                     and PLAN_QUEUE_S=:plan_queue_s
                </#if>
                <#if processbom_index_build_s??>
                     and PROCESSBOM_INDEX_BUILD_S=:processbom_index_build_s
                </#if>
                <#if processbom_index_curing_s??>
                     and PROCESSBOM_INDEX_CURING_S=:processbom_index_curing_s
                </#if>
                <#if productionver_left_s??>
                     and PRODUCTIONVER_LEFT_S=:productionver_left_s
                </#if>
                <#if productionver_right_s??>
                     and PRODUCTIONVER_RIGHT_S=:productionver_right_s
                </#if>
                <#if production_bom_left_s??>
                     and PRODUCTION_BOM_LEFT_S=:production_bom_left_s
                </#if>
                <#if production_bom_right_s??>
                     and PRODUCTION_BOM_RIGHT_S=:production_bom_right_s
                </#if>
                <#if production_date_s??>
                     and PRODUCTION_DATE_S=:production_date_s
                </#if>
                <#if production_line_s??>
                     and PRODUCTION_LINE_S=:production_line_s
                </#if>
                <#if production_step_left_s??>
                     and PRODUCTION_STEP_LEFT_S=:production_step_left_s
                </#if>
                <#if production_step_right_s??>
                     and PRODUCTION_STEP_RIGHT_S=:production_step_right_s
                </#if>
                <#if qty_dayproduct_left_i??>
                     and QTY_DAYPRODUCT_LEFT_I=:qty_dayproduct_left_i
                </#if>
                <#if qty_dayproduct_right_i??>
                     and QTY_DAYPRODUCT_RIGHT_I=:qty_dayproduct_right_i
                </#if>
                <#if quantity_dayplan_left_i??>
                     and QUANTITY_DAYPLAN_LEFT_I=:quantity_dayplan_left_i
                </#if>
                <#if quantity_dayplan_right_i??>
                     and QUANTITY_DAYPLAN_RIGHT_I=:quantity_dayplan_right_i
                </#if>
                <#if reason_midclass_left_s??>
                     and REASON_MIDCLASS_LEFT_S=:reason_midclass_left_s
                </#if>
                <#if reason_midclass_right_s??>
                     and REASON_MIDCLASS_RIGHT_S=:reason_midclass_right_s
                </#if>
                <#if reason_morclass_left_s??>
                     and REASON_MORCLASS_LEFT_S=:reason_morclass_left_s
                </#if>
                <#if reason_morclass_right_s??>
                     and REASON_MORCLASS_RIGHT_S=:reason_morclass_right_s
                </#if>
                <#if reason_nigclass_left_s??>
                     and REASON_NIGCLASS_LEFT_S=:reason_nigclass_left_s
                </#if>
                <#if reason_nigclass_right_s??>
                     and REASON_NIGCLASS_RIGHT_S=:reason_nigclass_right_s
                </#if>
                    
                <#if spare10_s??>
                     and SPARE10_S=:spare10_s
                </#if>
                <#if spare1_s??>
                     and SPARE1_S=:spare1_s
                </#if>
                <#if spare2_s??>
                     and SPARE2_S=:spare2_s
                </#if>
                <#if spare3_s??>
                     and SPARE3_S=:spare3_s
                </#if>
                <#if spare4_s??>
                     and SPARE4_S=:spare4_s
                </#if>
                <#if spare5_s??>
                     and SPARE5_S=:spare5_s
                </#if>
                <#if spare6_s??>
                     and SPARE6_S=:spare6_s
                </#if>
                <#if spare7_s??>
                     and SPARE7_S=:spare7_s
                </#if>
                <#if spare8_s??>
                     and SPARE8_S=:spare8_s
                </#if>
                <#if spare9_s??>
                     and SPARE9_S=:spare9_s
                </#if>
                <#if specification_left_s??>
                     and SPECIFICATION_LEFT_S=:specification_left_s
                </#if>
                <#if specification_right_s??>
                     and SPECIFICATION_RIGHT_S=:specification_right_s
                </#if>
                <#if status_s??>
                     and STATUS_S=:status_s
                </#if>
                <#if s_factory_s??>
                     and S_FACTORY_S=:s_factory_s
                </#if>
        ]]>
    </sql>
    <!-- 所属产品阶段 试制 01 试产 02 投产03, -->
    <sql comment="胎胚编码和版本，过滤过期的BOM" id="greenTire" >
	    <![CDATA[
	        SELECT PLIST.PART_NUMBER,PLIST.PART_REVISION,UDA_BOM.PROPHASE_S 
			from BOM BOM,UDA_BILLOFMATERIALS UDA_BOM,BOM_PART_LIST PLIST,UDA_BOMITEM ubi
			WHERE  BOM.BOM_KEY = PLIST.BOM_KEY
			AND UDA_BOM.OBJECT_KEY = BOM.BOM_KEY
			and PLIST.BOM_PART_LIST_KEY=ubi.OBJECT_KEY
			AND UDA_BOM.BOMMOLD_S = 'CoverTireMBOM'
			and "NVL"(to_date(ubi.expireddate_S,'yyyy-mm-dd hh24:MI:ss'),sysdate)>=sysdate
			AND UDA_BOM.MASTERSAP_S = :code
	    ]]>
    </sql>
    
    <sql comment="全钢硫化工艺,EQUIPMENTCODE_S字段作为与成型工艺区分 （AND UDA_ROUTE.STAGE_S =:stage）" id="CuringProcId1" >
        <![CDATA[
			SELECT
			
			ROUTE.ROUTE_NAME
		FROM
			(
				SELECT
					ROUTE.ROUTE_KEY,
					ROUTE.ROUTE_NAME,
					UDA_ROUTE.RECEIVE_TIME_T RECEIVE_TIME_S,
					UDA_ROUTE.STAGE_S
				FROM
					ROUTE,
					UDA_ROUTE
				WHERE
					ROUTE.ROUTE_KEY = UDA_ROUTE.OBJECT_KEY
				AND "SUBSTR" (UDA_ROUTE.PDMMAT_S, 0, 7) LIKE :pdmmat
				AND UDA_ROUTE.ROUTECODE_S LIKE 'LH%'
				ORDER BY
					UDA_ROUTE.RECEIVE_TIME_T DESC
			) ROUTE
		WHERE
			ROWNUM = 1
        ]]>
    </sql>
    <sql comment="根据外胎编码查询胎胚施工代码" id="findByCoverTyre" >
        <![CDATA[
            SELECT SUBSTR (BOM.DESCRIPTION,0,7)
			FROM	BOM,UDA_BILLOFMATERIALS
			WHERE BOM.BOM_KEY=UDA_BILLOFMATERIALS.OBJECT_KEY 
			AND UDA_BILLOFMATERIALS.MASTERSAP_S=:greenTireCode
			and ROWNUM =1
        ]]>
    </sql>
    <sql comment="半钢硫化工艺,EQUIPMENTCODE_S字段作为与成型工艺区分" id="CuringProcId2" >
        <![CDATA[
              SELECT ROUTE.ROUTE_NAME
			 FROM ROUTE,UDA_ROUTE,
				(SELECT ROUTE.ROUTE_KEY,ROUTE.ROUTE_NAME,MAX(UDA_ROUTE.RECEIVE_TIME_T) RECEIVE_TIME_S
				 FROM ROUTE,UDA_ROUTE
				 WHERE ROUTE.ROUTE_KEY = UDA_ROUTE.OBJECT_KEY
				 AND UDA_ROUTE.SAPMAT_S =:code
				 AND UDA_ROUTE.ROUTECODE_S LIKE 'LH%'
				GROUP BY ROUTE.ROUTE_KEY,ROUTE.ROUTE_NAME,UDA_ROUTE.RECEIVE_TIME_T
				ORDER BY UDA_ROUTE.RECEIVE_TIME_T DESC) TIMEr
				WHERE TIMEr.ROUTE_KEY = ROUTE.ROUTE_KEY
				AND ROUTE.ROUTE_KEY = UDA_ROUTE.OBJECT_KEY
				AND TIMEr.RECEIVE_TIME_S = UDA_ROUTE.RECEIVE_TIME_T
				AND ROWNUM=1
        ]]>
    </sql>
      <sql comment="硫化工艺" id="CuringProcIdByMonth" >
        <![CDATA[
             select * from
             (SELECT ROUTE.ROUTE_NAME
			 FROM ROUTE,UDA_ROUTE
			 WHERE ROUTE.ROUTE_KEY = UDA_ROUTE.OBJECT_KEY
			 AND UDA_ROUTE.SAPMAT_S =:code)
			 where rownum=1
			 
        ]]>
    </sql>
    
    <sql comment="校验外胎BOM是否有子胎胚bom有效" id="validBom" >
        <![CDATA[
           SELECT
			    count(1)
			FROM
			    UDA_BILLOFMATERIALS b,BOM_PART_LIST bpl,UDA_BOMITEM ub
			WHERE
			    B.OBJECT_KEY=BPL.BOM_KEY
			    AND ub.OBJECT_KEY=bpl.BOM_PART_LIST_KEY
			AND (
			    ub.EXPIREDDATE_S IS NULL
			    OR ub.EXPIREDDATE_S >= TO_CHAR (
			        CURRENT_DATE,
			        'yyyyMMddhh24miss'
			    )
			)
			AND bPL.PART_NUMBER IN (
			    SELECT
			        BPL2.PART_NUMBER
			    FROM
			       UDA_BILLOFMATERIALS b2,BOM_PART_LIST bpl2,UDA_BOMITEM ub
			    WHERE
			    B2.OBJECT_KEY=BPL2.BOM_KEY
			    AND ub.OBJECT_KEY=bpl2.BOM_PART_LIST_KEY
			    AND b2.MASTERSAP_S =:code
			    AND b2.BOMMOLD_S = 'CoverTireMBOM'
			    AND (
			        ub.EXPIREDDATE_S IS NULL
			        OR ub.EXPIREDDATE_S >= TO_CHAR (
			            CURRENT_DATE,
			            'yyyyMMddhh24miss'
			        )
			    )
			)
        ]]>
    </sql>
    
     <sql comment="校验外胎BOM是否有效" id="validBomDayplan" >
        <![CDATA[
			select count(1) FROM BOM,UDA_BILLOFMATERIALS,BOM_PART_LIST,UDA_BOMITEM
			WHERE BOM.BOM_KEY=UDA_BILLOFMATERIALS.OBJECT_KEY 
			AND BOM.BOM_KEY=BOM_PART_LIST.BOM_KEY
			AND BOM_PART_LIST.BOM_PART_LIST_KEY=UDA_BOMITEM.OBJECT_KEY
			AND UDA_BILLOFMATERIALS.MASTERSAP_S=:code 
			AND BOM_PART_LIST.PART_NUMBER=:subitemsap
			AND (UDA_BOMITEM.EXPIREDDATE_S is null or
			UDA_BOMITEM.EXPIREDDATE_S > to_char(sysdate, 'yyyyMMddHH24miss'))
			AND UDA_BILLOFMATERIALS.PROPHASE_S=:prophase 
			AND UDA_BILLOFMATERIALS.FACTORY_S=:factory
			AND UDA_BILLOFMATERIALS.WERKS_S=:werk
        ]]>
    </sql>
     <sql comment="校验外胎BOM是否有效" id="validBomDayplan_bg" >
        <![CDATA[
			select count(1) FROM BOM,UDA_BILLOFMATERIALS,BOM_PART_LIST,UDA_BOMITEM
			WHERE BOM.BOM_KEY=UDA_BILLOFMATERIALS.OBJECT_KEY 
			AND BOM.BOM_KEY=BOM_PART_LIST.BOM_KEY
			AND BOM_PART_LIST.BOM_PART_LIST_KEY=UDA_BOMITEM.OBJECT_KEY
			AND UDA_BILLOFMATERIALS.MASTERSAP_S=:code 
			AND BOM_PART_LIST.PART_NUMBER=:subitemsap
			AND (UDA_BOMITEM.EXPIREDDATE_S is null or
			UDA_BOMITEM.EXPIREDDATE_S > to_char(sysdate, 'yyyyMMddHH24miss'))
			AND UDA_BILLOFMATERIALS.PROPHASE_S=:prophase 
			AND UDA_BILLOFMATERIALS.WERKS_S=:werk
        ]]>
    </sql>
    
    <sql comment="成型工艺查询" id="cxProcId" >
        <![CDATA[
            select bp.id_s
			  from at_int_plm_buildingprocess bp
			where bp.SAPMAT_S = :code
			   and bp.version_s =:version
			   and bp.stage_s = :stage
			   and bp.record_flag_s='A'
        ]]>
    </sql>
    
    <sql comment="成型工艺查询" id="validCxProcId" >
        <![CDATA[
            select R.route_name
              from ROUTE R,UDA_ROUTE bp
            where bp.Object_key=R.route_key
               and bp.SAPMAT_S = :greenTireCode
               and bp.record_flag_s='A'
        ]]>
    </sql>
    
    <sql comment="成型工艺唯一查询" id="validCxProcIdUnique" >
        <![CDATA[
              select R.route_name
              from ROUTE R,UDA_ROUTE bp
            where bp.Object_key=R.route_key
               and bp.SAPMAT_S = :greenTireCode
			   and substr(bp.routecode_s,0,2) = 'CX'
               and bp.record_flag_s='A'
				ORDER BY bp.RECEIVE_TIME_T desc
        ]]>
    </sql>
    
    
    
    <sql comment="查询成本收集器" id="cost">
        <![CDATA[
            select production_ver_s 
            from AT_INT_SAP_PRODUCTVERSION 
            where 
                cost_col_status_s='KA'  
                and matstatus_s is null 
                and mksp_s is null 
                and material_code_s =:code
                and production_ver_s=:production_ver_s
        ]]>
    </sql>
    <sql comment="查询成本收集器" id="cost1">
        <![CDATA[
            select production_ver_s 
            from AT_INT_SAP_PRODUCTVERSION 
            where 
                cost_col_status_s='KA'  
                and matstatus_s is null 
                and mksp_s is null 
                and material_code_s =:code
                and production_ver_s like'%'||:production_ver_s
        ]]>
    </sql>
    
    
    <sql comment="查询成本收集器版本" id="costproductionver">
        <![CDATA[

		        SELECT UDA.FACTORY_S || UDA.REPLACEBOM_S PRODUCTION_VER_S
		        FROM BOM,UDA_BILLOFMATERIALS UDA,BOM_PART_LIST LI
				WHERE BOM.BOM_KEY = UDA.OBJECT_KEY
				AND BOM.BOM_KEY = LI.BOM_KEY
				AND SUBSTR(BOM.BOM_NAME,0,9)=:code 
				AND LI.PART_REVISION=:subitemrevision_s
			    AND LI.PART_NUMBER=:subitemsap_s

        ]]>
    </sql>
    <sql comment="半钢查询成本收集器版本" id="costproductionver1">
        <![CDATA[

		        SELECT UDA.REPLACEBOM_S PRODUCTION_VER_S
		        FROM BOM,UDA_BILLOFMATERIALS UDA,BOM_PART_LIST LI
				WHERE BOM.BOM_KEY = UDA.OBJECT_KEY
				AND BOM.BOM_KEY = LI.BOM_KEY
				AND SUBSTR(BOM.BOM_NAME,0,9)=:code 
				AND LI.PART_REVISION=:subitemrevision_s
			    AND LI.PART_NUMBER=:subitemsap_s

        ]]>
    </sql>
    
    <sql comment="验证BOM参数代码是否一致" id="validBomParamCode">
        <![CDATA[
             select codes,count(codes) from (
			    SELECT
				    listagg (PM.PARMCODE_S, ',') WITHIN GROUP (ORDER BY PM.PARMCODE_S DESC) CODES
				FROM
				    ROUTE CP,UDA_ROUTE,
				    AT_INT_PLM_CURINGPARAMETER PC,
				    AT_INT_PLM_CURINGPARAMETERM PM
				WHERE
						CP.ROUTE_KEY=UDA_ROUTE.OBJECT_KEY
				  AND	UDA_ROUTE.RECORD_FLAG_S = 'A'
					AND PC.RECORD_FLAG_S = 'A'
					AND PM.RECORD_FLAG_S = 'A'
					AND CP.ROUTE_NAME = PC.process_id_s (+)
					AND PC.PARMINDX_S = PM.OBJECTID_S (+)
					AND CP.ROUTE_NAME =:id1
			union all
				SELECT
				    listagg (PM.PARMCODE_S, ',') WITHIN GROUP (ORDER BY PM.PARMCODE_S DESC) CODES
				FROM
				    ROUTE CP,UDA_ROUTE,
				    AT_INT_PLM_CURINGPARAMETER PC,
				    AT_INT_PLM_CURINGPARAMETERM PM
				WHERE
						CP.ROUTE_KEY=UDA_ROUTE.OBJECT_KEY
				  AND	UDA_ROUTE.RECORD_FLAG_S = 'A'
					AND PC.RECORD_FLAG_S = 'A'
					AND PM.RECORD_FLAG_S = 'A'
					AND CP.ROUTE_NAME = PC.process_id_s (+)
					AND PC.PARMINDX_S = PM.OBJECTID_S (+)
					AND CP.ROUTE_NAME =:id2
				)
			GROUP BY CODES
        ]]>
    </sql>
    
    <sql comment="验证BOM参数值是否一致" id="validBomParamValue">
        <![CDATA[
             select VALUE_S,count(VALUE_S) from (
                SELECT
                    listagg (PM.VALUE_S, ',') WITHIN GROUP (ORDER BY PM.PARMCODE_S DESC) VALUE_S
                FROM
					ROUTE CP,UDA_ROUTE,
					AT_INT_PLM_CURINGPARAMETER PC,
					AT_INT_PLM_CURINGPARAMETERM PM
               WHERE
					CP.ROUTE_KEY=UDA_ROUTE.OBJECT_KEY
					AND	UDA_ROUTE.RECORD_FLAG_S = 'A'
					AND PC.RECORD_FLAG_S = 'A'
					AND PM.RECORD_FLAG_S = 'A'
					AND CP.ROUTE_NAME = PC.process_id_s (+)
					AND PC.PARMINDX_S = PM.OBJECTID_S (+)
					AND CP.ROUTE_NAME =:id1
            union all
                SELECT
                    listagg (PM.VALUE_S, ',') WITHIN GROUP (ORDER BY PM.PARMCODE_S DESC) VALUE_S
               FROM
					ROUTE CP,UDA_ROUTE,
					AT_INT_PLM_CURINGPARAMETER PC,
					AT_INT_PLM_CURINGPARAMETERM PM
				WHERE
					CP.ROUTE_KEY=UDA_ROUTE.OBJECT_KEY
					AND	UDA_ROUTE.RECORD_FLAG_S = 'A'
					AND PC.RECORD_FLAG_S = 'A'
					AND PM.RECORD_FLAG_S = 'A'
					AND CP.ROUTE_NAME = PC.process_id_s (+)
					AND PC.PARMINDX_S = PM.OBJECTID_S (+)
					AND CP.ROUTE_NAME =:id2
                )
            GROUP BY VALUE_S
        ]]>
    </sql>
    <sql comment="获取月计划对应物料编码的计划量" id="getPlanCount">
        <![CDATA[
            select
                case when allocated is null then 0 else allocated end allocated,
                case when total is null then 0 else total end total,
                case when MAX is null then 0 else MAX end MAX,
                (case when MAX is null then 0 else MAX end)-(case when allocated is null then 0 else allocated end) left
            from (
                SELECT
	                (
	                    SELECT
	                        SUM (quantity_dayplan_left_i)
	                    FROM
	                        AT_C_PP_PRODUCTIONDAYPLAN
	                    WHERE
	                        production_date_s = :date
	                    AND material_code_left_s = :code
	                    AND RECORD_FLAG_S='A'
                        AND S_FACTORY_S=:s_factory_s
	                ) + (
	                    SELECT
	                        SUM (quantity_dayplan_right_i)
	                    FROM
	                        AT_C_PP_PRODUCTIONDAYPLAN
	                    WHERE
	                        production_date_s = :date
	                    AND material_code_right_s = :code
                        AND RECORD_FLAG_S='A'
                        AND S_FACTORY_S=:s_factory_s
	                ) allocated,
	                quantity_plan_f total,
	                quantity_plan_f * (
	                    100 + overproduction_percent_s
	                ) / 100 MAX
	            FROM
	                AT_C_PP_SapProductionPlan
	            WHERE
	                MONTH_I = SUBSTR (:date, 0, 6)
	            AND MATERIAL_CODE_S = :code
	            AND TO_DATE (:date, 'yyyyMMdd') >= plan_starttime_t
	            AND TO_DATE (:date, 'yyyyMMdd') <= plan_endtime_t
	            AND record_flag_s='A'
	            and s_factory_s=:s_factory_s
            ) x
        ]]>
    </sql>
    
    <sql comment="获取月计划对应物料编码的计划量" id="getPlanCountNotMyself">
        <![CDATA[
            select
                case when allocated is null then 0 else allocated end allocated,
                case when total is null then 0 else total end total,
                case when MAX is null then 0 else MAX end MAX
            from (
	            SELECT
	                (
	                    SELECT
	                        SUM (quantity_dayplan_left_i)
	                    FROM
	                        AT_C_PP_PRODUCTIONDAYPLAN
	                    WHERE
	                        production_date_s = :date
	                    AND material_code_left_s = :code
                        AND RECORD_FLAG_S='A'
                        AND S_FACTORY_S=:s_factory_s
	                    AND atr_key<>:atr_key
	                ) + (
	                    SELECT
	                        SUM (quantity_dayplan_right_i)
	                    FROM
	                        AT_C_PP_PRODUCTIONDAYPLAN
	                    WHERE
	                        production_date_s = :date
	                    AND material_code_right_s = :code
                        AND RECORD_FLAG_S='A'
                        AND S_FACTORY_S=:s_factory_s
	                    AND atr_key<>:atr_key
	                ) allocated,
	                quantity_plan_f total,
	                quantity_plan_f * (
	                    100 + overproduction_percent_s
	                ) / 100 MAX
	            FROM
	                AT_C_PP_SapProductionPlan
	            WHERE
	                MONTH_I = SUBSTR (:date, 0, 6)
	            AND MATERIAL_CODE_S = :code
	            AND TO_DATE (:date, 'yyyyMMdd') >= plan_starttime_t
	            AND TO_DATE (:date, 'yyyyMMdd') <= plan_endtime_t
	            AND record_flag_s='A'
                and s_factory_s=:s_factory_s
	        ) x
        ]]>
    </sql>
    
    <sql comment="根据产线查询昨天最后一条生产计划的信息" id="getYesterdayFinalPlanByLine">
      <![CDATA[  
            SELECT
	            *
	        FROM
	            (
	                SELECT
	                    *
	                FROM
	                    AT_C_PP_PRODUCTIONDAYPLAN
	                WHERE
	                    PRODUCTION_DATE_S =:date
	                AND PRODUCTION_LINE_S =:lineCode
	                ORDER BY
	                    to_number(PLAN_QUEUE_S) DESC
	            )
	        WHERE
	            ROWNUM = 1
        ]]>
    </sql>

	<sql comment="通过月计划信息获取月计划下所属的日计划" id="getDayPlanBySapProductionPlan">
      <![CDATA[  
      select t.*
  		from At_c_Pp_Productiondayplan t
 		where 1 = 1
   		AND t.status_s = '218002'
   		AND t.material_code_left_s = :material_code 
		AND t.material_code_right_s = :material_code 
   		AND t.material_desc_left_s = :material_name 
   		AND t.material_desc_right_s = :material_name 
   		AND to_date(t.production_date_s, 'yyyy-MM-dd') >= to_date( :starttime , 'yyyy-MM-dd')
   		AND to_date(t.production_date_s, 'yyyy-MM-dd') <= to_date( :endtime , 'yyyy-MM-dd')
       ]]>
	</sql>
    <sql comment="校验物料是否失效" id="validDiscardMaterialCode" >
        <![CDATA[
           select count(1)
			  from AT_INT_SAP_MATERIALS t
			 where t.Status_s is not null
			 and t.materialcode_s=:materialcode
        ]]>
    </sql>
    
       <sql comment="获取前一日计划的下发参数是否为试验胎参数" id="validparameteristest" >
        <![CDATA[
             select p.test_flag_s from  AT_C_MM_PlanCuringParameter p
					where p.producting_dayplan_s in(
 						  select t.plan_no_s
    				 from AT_C_PP_PRODUCTIONDAYPLAN t
   					 where to_char(to_date(t.production_date_s,'yyyymmdd')+1,'yyyymmdd') =:productdate
   					   and t.production_line_s = :equipcode
   					   and t.record_flag_s=:recordflag
    					 and t.s_factory_s=:factory
    				  and t.agenc_no_s=:ageno
    				   and t.material_code_left_s=:materialcode)
    		    and rownum=1
    		    and p.record_flag_s=:recordflag
  				and p.s_factory_s=:factory
 			    and p.agenc_no_s=:ageno
        ]]>
    </sql>
    
    <sql comment="根据多个参数查询BOM及版本" id="getBom" >
        <![CDATA[
             SELECT
					bom.BOM_NAME,
					bom.BOM_REVISION
				FROM
					BOM bom,
					UDA_BILLOFMATERIALS ud,
					BOM_PART_LIST bpl,
					UDA_BOMITEM ub
				WHERE
					1 = 1
				AND BOM.BOM_KEY = UD.OBJECT_KEY
				AND BOM.BOM_KEY = BPL.BOM_KEY
				AND BPL.BOM_PART_LIST_KEY = UB.OBJECT_KEY
				AND UD.MASTERSAP_S =:mastersap_s
				AND BPL.PART_NUMBER =:part_number
				AND BPL.PART_REVISION =:part_revision
				AND UD.PROPHASE_S =:prophase_s
				AND BOM.BOM_REVISION =:bom_revision
        ]]>
    </sql>
    <sql comment="通过物料、生产时间查询唯一的工单数据" id="getWorkOrderByDayPlan" >
        <![CDATA[
           SELECT
				*
			FROM
				WORK_ORDER_ITEMS
			WHERE
				PART_NUMBER = :material_code
			AND PLANNED_START_TIME <= TO_DATE (:production_date, 'yyyy-MM-dd')
			AND PLANNED_FINISH_TIME >= TO_DATE (:production_date, 'yyyy-MM-dd')
        ]]>
    </sql>
    <sql comment="datagrid" id="datagrid_rows2">
    <![CDATA[
			select AC.ISUSED_S
						from  AT_C_MM_MachineControl  AC
						LEFT JOIN CORE_USER US1 ON AC.CHANGED_BY_S=US1.USERCODE
						LEFT JOIN CORE_USER US2 ON AC.CREATED_BY_S=US2.USERCODE
						right JOIN (
								select
										 p.p_line_name,
										 e.equip_name,
										 u.status_s,
										 e.description,
										 u.ip_address_s as ip_s
								from production_line       p,
										 p_line_work_center    r1,
										 work_center           wc,
										 work_center_equipment r2,
										 equipment             e,
										 uda_equipment         u,
										 (SELECT p.P_LINE_NAME
											FROM AREA c,AREA_PRODUCTION_LINE d,PRODUCTION_LINE p,UDA_PRODUCTIONLINE u
											where c.AREA_KEY=d.PARENT_KEY
											and d.CHILD_KEY=p.P_LINE_KEY
											and p.p_line_key=u.object_key
											and c.AREA_NAME =:area_name
											and p.P_LINE_NAME =:p_line_name
											)PH
										 where p.p_line_key = r1.parent_key
											 and r1.child_key = wc.wc_key
											 and wc.wc_key = r2.parent_key
											 and r2.child_key = e.equip_key
											 and e.equip_key = u.object_key(+)
											 and p.p_line_name=PH.P_LINE_NAME
											 order by e.equip_name
							) line
							ON AC.EQUIP_CODE_S = line.equip_name

        ]]>
    </sql>
    <sql comment="查询产线最近的日计划" id="querylastdayplan" >
        <![CDATA[
            SELECT
				PLAN_NO_S
			FROM
				AT_C_PP_PRODUCTIONDAYPLAN 
			WHERE
				PRODUCTION_LINE_S = :line
				AND RECORD_FLAG_S = 'A'
				AND STATUS_S BETWEEN '218003' AND '218004'
			ORDER BY
				PRODUCTION_DATE_S DESC
        ]]>
    </sql>
</sqls>