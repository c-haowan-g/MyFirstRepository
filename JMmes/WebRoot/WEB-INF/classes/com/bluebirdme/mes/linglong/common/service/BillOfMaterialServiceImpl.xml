<?xml version="1.0" encoding="UTF-8"?>
<sqls>
    <sql comment="获取下拉菜单" id="datagridBOMCount">
        <![CDATA[
         SELECT  UBOM.*,INFO.BOMDESC,BOM.BOM_KEY,BOM.BOM_NAME,BOM.BOM_REVISION,INFO.DESCRIPTION,INFO.PART_NUMBER,INFO.PART_REVISION,INFO.CREATEDDATE_S,INFO.CREATEUSER_S,INFO.BASENUM_S 
             ,INFO.EXPIREDDATE_S,INFO.LAYER_NUMBER_S,INFO.MODIFIER_S,INFO.RECIPETYPE_S,INFO.SUPPLYCODE_S,INFO.RECEIVE_TIME_T,INFO.QUANTITY,INFO.UNIT_OF_MEASURE
             ,INFO.state,trim(to_char(current_timestamp, 'YYYYMMDDhh24miss')||trim(to_char(floor(DBMS_RANDOM.VALUE()*999999999999),'999999999999'))) ids
         FROM (
             select BOM_PART_LIST.DESCRIPTION bomDesc,PART.PART_NUMBER,PART.PART_REVISION,PART.DESCRIPTION,PART.BOM_NAME,PART.BOM_REVISION,UDA_BOMITEM.*,BOM_PART_LIST.QUANTITY,BOM_PART_LIST.UNIT_OF_MEASURE,
             case when PART.creator_key=2 then 'closed' when PART.creator_key=2 then 'closed' else '' end  state
                 from BOM,BOM_PART_LIST,PART,UDA_BOMITEM 
			         where 1=1
			              AND BOM.BOM_KEY = BOM_PART_LIST.BOM_KEY
			              AND BOM_PART_LIST.PART_NUMBER=PART.PART_NUMBER
			                  AND BOM_PART_LIST.PART_REVISION = PART.PART_REVISION
			               AND UDA_BOMITEM.OBJECT_KEY=BOM_PART_LIST.BOM_PART_LIST_KEY
				                <#if bomkey??>
				                and BOM.BOM_NAME = :bomkey
				            </#if>
				            <#if bomrevision??>
				                and BOM.BOM_REVISION = :bomrevision
				            </#if>
				   ) INFO LEFT JOIN BOM LEFT JOIN UDA_BILLOFMATERIALS UBOM ON UBOM.OBJECT_KEY=BOM.BOM_KEY ON BOM.BOM_NAME=INFO.BOM_NAME
                       AND BOM.BOM_REVISION=INFO.BOM_REVISION
        ]]>
    </sql>
    <sql comment="datagridUDA" id="datagridUDA_rows">
        <![CDATA[
            SELECT BBOM.*,UUBOM.* FROM (SELECT BOM.*,BM.MASTERSAP_S,BM.MATERIALTYPE_S,trim(to_char(current_timestamp, 'YYYYMMDDhh24miss')||trim(to_char(floor(DBMS_RANDOM.VALUE()*999999999999),'999999999999'))) ids,
                  case when BOM.creator_key=2 then 'closed' when BOM.creator_key=2 then 'closed' else '' end  state FROM BOM,UDA_BILLOFMATERIALS BM
               WHERE 1=1 AND BOM.BOM_KEY = BM.OBJECT_KEY AND BOM.BOM_KEY IN (
               select BOM.BOM_KEY
               from UDA_BILLOFMATERIALS UBOM,BOM,BOM_PART_LIST BP,UDA_BOMITEM UB,PART

			 where 1=1 AND BOM.BOM_KEY = UBOM.OBJECT_KEY(+)
			 AND BP.BOM_PART_LIST_KEY = UB.OBJECT_KEY(+)
			 AND BOM.BOM_REVISION = PART.PART_REVISION(+) AND UBOM.MASTERSAP_S = PART.PART_NUMBER(+)
			 AND BOM.BOM_KEY = BP.BOM_KEY(+)
			    <#if bom2flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) >= sysdate AND 1 = :bom2flag
	            </#if> 
			    <#if bom3flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) < sysdate AND 1 = :bom3flag
	            </#if>
			    <#if bom_name??>
	                and BOM.BOM_NAME like :bom_name || '%'
	            </#if>  
	            <#if subItem??>
	                and BP.PART_NUMBER = :subItem
	            </#if>
	            <#if bom_revision??>
	                and BOM.BOM_REVISION = :bom_revision
	            </#if> 
	             <#if description??>
					and BOM.DESCRIPTION like '%'||:description||'%'
				</#if> 
	            <#if prophase??>
	                and UBOM.PROPHASE_S = :prophase
	            </#if> 
	            <#if bomtype_s??>
	                and UBOM.BOMMOLD_S = :bomtype_s
	            </#if>
	            GROUP BY BOM.BOM_KEY
                )) BBOM,(

				  SELECT
						BP.DESCRIPTION bomDesc,BP.PART_NUMBER
					FROM
						UDA_BILLOFMATERIALS UBOM,
						BOM,
						BOM_PART_LIST BP,
						UDA_BOMITEM UB,
						PART
					WHERE
						1 = 1
					AND BOM.BOM_KEY = UBOM.OBJECT_KEY (+)
					AND BP.BOM_PART_LIST_KEY = UB.OBJECT_KEY (+)
					AND BOM.BOM_REVISION = PART.PART_REVISION (+)
					AND UBOM.MASTERSAP_S = PART.PART_NUMBER (+)
					AND BOM.BOM_KEY = BP.BOM_KEY (+)
					<#if bom2flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) >= sysdate AND 1 = :bom2flag
	            </#if> 
			    <#if bom3flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) < sysdate AND 1 = :bom3flag
	            </#if>
			    <#if bom_name??>
	                and BP.PART_NUMBER like :bom_name || '%'
	            </#if>  
	            <#if subItem??>
	                and BP.PART_NUMBER = :subItem
	            </#if>
	            <#if bom_revision??>
	                and BOM.BOM_REVISION = :bom_revision
	            </#if>  
	            <#if prophase??>
	                and UBOM.PROPHASE_S = :prophase
	            </#if>
	            
	            <#if bomtype_s??>
	                and UBOM.BOMMOLD_S = :bomtype_s
	            </#if>
	            GROUP BY BP.PART_NUMBER,BP.DESCRIPTION
            ) UUBOM
WHERE 1 = 1 AND UUBOM.PART_NUMBER(+) = BBOM.MASTERSAP_S ORDER BY BBOM.MASTERSAP_S
        ]]>
    </sql>
    <sql comment="datagridUDA" id="datagridUDA_total">
        <![CDATA[
            select count(1) from(
                 SELECT BBOM.*,UUBOM.* FROM (SELECT BOM.*,BM.MASTERSAP_S,BM.MATERIALTYPE_S,trim(to_char(current_timestamp, 'YYYYMMDDhh24miss')||trim(to_char(floor(DBMS_RANDOM.VALUE()*999999999999),'999999999999'))) ids,
                  case when BOM.creator_key=2 then 'closed' when BOM.creator_key=2 then 'closed' else '' end  state FROM BOM,UDA_BILLOFMATERIALS BM
               WHERE 1=1 AND BOM.BOM_KEY = BM.OBJECT_KEY AND BOM.BOM_KEY IN (
               select BOM.BOM_KEY
               from UDA_BILLOFMATERIALS UBOM,BOM,BOM_PART_LIST BP,UDA_BOMITEM UB,PART

			 where 1=1 AND BOM.BOM_KEY = UBOM.OBJECT_KEY(+)
			 AND BP.BOM_PART_LIST_KEY = UB.OBJECT_KEY(+)
			 AND BOM.BOM_REVISION = PART.PART_REVISION(+) AND UBOM.MASTERSAP_S = PART.PART_NUMBER(+)
			 AND BOM.BOM_KEY = BP.BOM_KEY(+)
			    <#if bom2flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) >= sysdate AND 1 = :bom2flag
	            </#if> 
			    <#if bom3flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) < sysdate AND 1 = :bom3flag
	            </#if>
			    <#if bom_name??>
	                and BOM.BOM_NAME like :bom_name || '%'
	            </#if>  
	            <#if subItem??>
	                and BP.PART_NUMBER = :subItem
	            </#if>
	            <#if bom_revision??>
	                and BOM.BOM_REVISION = :bom_revision
	            </#if> 
	            <#if description??>
					and BOM.DESCRIPTION like '%'||:description||'%'
				</#if> 
	            <#if prophase??>
	                and UBOM.PROPHASE_S = :prophase
	            </#if> 
	            <#if bomtype_s??>
	                and UBOM.BOMMOLD_S = :bomtype_s
	            </#if>
	            GROUP BY BOM.BOM_KEY
                )) BBOM,(

				  SELECT
						BP.DESCRIPTION bomDesc,BP.PART_NUMBER
					FROM
						UDA_BILLOFMATERIALS UBOM,
						BOM,
						BOM_PART_LIST BP,
						UDA_BOMITEM UB,
						PART
					WHERE
						1 = 1
					AND BOM.BOM_KEY = UBOM.OBJECT_KEY (+)
					AND BP.BOM_PART_LIST_KEY = UB.OBJECT_KEY (+)
					AND BOM.BOM_REVISION = PART.PART_REVISION (+)
					AND UBOM.MASTERSAP_S = PART.PART_NUMBER (+)
					AND BOM.BOM_KEY = BP.BOM_KEY (+)
					<#if bom2flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) >= sysdate AND 1 = :bom2flag
	            </#if> 
			    <#if bom3flag??>
	                AND "NVL"(to_date(UB.EXPIREDDATE_S,'yyyy-mm-dd hh24:MI:ss'),sysdate) < sysdate AND 1 = :bom3flag
	            </#if>
			    <#if bom_name??>
	                and BP.PART_NUMBER like :bom_name || '%'
	            </#if>  
	            <#if subItem??>
	                and BP.PART_NUMBER = :subItem
	            </#if>
	            <#if bom_revision??>
	                and BOM.BOM_REVISION = :bom_revision
	            </#if>
	               
	            <#if prophase??>
	                and UBOM.PROPHASE_S = :prophase
	            </#if> 
	            <#if bomtype_s??>
	                and UBOM.BOMMOLD_S = :bomtype_s
	            </#if>
	            GROUP BY BP.PART_NUMBER,BP.DESCRIPTION
            ) UUBOM
WHERE 1 = 1 AND UUBOM.PART_NUMBER(+) = BBOM.MASTERSAP_S ORDER BY BBOM.MASTERSAP_S
            )
                    
        ]]>
    </sql>
    
     <sql comment="查询树状结构" id="treelistQuery">
        <![CDATA[
            SELECT
			  UBOM.mastersap_s,
				BOM.BOM_REVISION,
				(
				SELECT
					up.MATDESCFULL_S
				FROM
					PART,
					uda_part up
				WHERE
					PART.PART_KEY = UP.object_key
				AND PART.PART_NUMBER = :subitemsap_s
				AND PART.PART_REVISION = :version_s
			) AS fatherdesc, 
			 PART.PART_NUMBER,
			 PART.PART_REVISION,
			 up.MATDESCFULL_S AS childdesc,
			UBOM.REPLACEBOM_S,UBOM.PROPHASE_S,
			(
				SELECT
					up.oldmatcode_s
				FROM
					PART,
					uda_part up
				WHERE
					PART.PART_KEY = UP.object_key
				AND PART.PART_NUMBER = :subitemsap_s
				AND PART.PART_REVISION = :version_s
			) AS specification_s,
			BPL.QUANTITY,
			BPL.UNIT_OF_MEASURE,
			ub.record_flag_s,
			to_date(ub.expireddate_S,'yyyy-mm-dd hh24:MI:ss') exipreddate,
			UBOM.FACTORY_S
			FROM
				UDA_BILLOFMATERIALS UBOM,
				BOM,
				BOM_PART_LIST bpl,
			  UDA_BOMITEM ub,
				PART,
				uda_part up
			WHERE
				1 = 1
			AND BOM.BOM_KEY = UBOM.OBJECT_KEY
			AND BOM.BOM_KEY = BPL.BOM_KEY
			AND BPL.PART_NUMBER = PART.PART_NUMBER
			AND BPL.PART_REVISION = PART.PART_REVISION
			and BPL.BOM_PART_LIST_KEY=UB.OBJECT_KEY
			AND PART.PART_KEY = UP.object_key
			AND BOM.BOM_NAME LIKE :subitemsap_s || '%'
			AND BOM.BOM_REVISION = :version_s
			ORDER BY
				BOM.BOM_NAME
        ]]>
    </sql>
</sqls>